using System;
using System.IO;
using System.Collections.Generic;
using UnityEngine;

namespace Oxide.Plugins
{
    [Info("Triggered Explosive Charges", "EnigmaticDragon", "1.0.14", ResourceId = 2383)]
    [Description("Adds the option to set off C4 manually without a timer")]
    public class TriggeredExplosiveCharges : RustPlugin
    {
        #region Constants
        private const string PERMISSION_PLACE = "triggeredexplosivecharges.place";
        private const string PERMISSION_NOTRIGGER = "triggeredexplosivecharges.notrigger";
        private const string PERMISSION_CRAFTING = "triggeredexplosivecharges.crafting";

        private const int TRIGGER_ITEM_ID = 919780768; // bone.club
        private const ulong TRIGGER_SKIN_TIMED_MODE = 881325138;
        private const ulong TRIGGER_SKIN_TRIGGERD_MODE = 881319299;
        enum C4_MODE : ulong
        {
            TIMED = TRIGGER_SKIN_TIMED_MODE,
            TRIGGERED = TRIGGER_SKIN_TRIGGERD_MODE
        }
        #endregion

        #region Classes

        private class TriggeredExplosivesManager
        {
            #region Member Variables

            public static Dictionary<ulong, TriggeredExplosivesManager> allManagers
                = new Dictionary<ulong, TriggeredExplosivesManager>();
            private static Dictionary<uint, ulong> fakeC4_To_PlayerID = new Dictionary<uint, ulong>();

            private BasePlayer player;
            private List<TimedExplosive> triggeredExplosives;
            private List<DroppedItem> fakeExplosives;

            private ulong c4_mode;
            private Item trigger;

            #endregion

            public TriggeredExplosivesManager(BasePlayer player)
            {
                this.player = player;

                triggeredExplosives = new List<TimedExplosive>();
                fakeExplosives = new List<DroppedItem>();
                c4_mode = (ulong)C4_MODE.TIMED;
                trigger = null;

                List<uint> deployedExplosives;
                if (!TriggeredExplosiveCharges.saveData.deployedExplosives.TryGetValue(player.userID, out deployedExplosives))
                    saveData.deployedExplosives.Add(player.userID, new List<uint>());
                else
                {
                    for (int i = deployedExplosives.Count - 1; i > -1; i--)
                    {
                        BaseNetworkable bn = BaseNetworkable.serverEntities.Find(deployedExplosives[i]);
                        if (bn)
                        {
                            DroppedItem fakeC4 = bn.GetComponent<DroppedItem>();
                            if (fakeC4)
                            {
                                fakeC4_To_PlayerID[fakeC4.net.ID] = player.userID;
                                fakeC4.allowPickup = configuration.C4_ALLOW_PICKUP;
                                fakeExplosives.Add(fakeC4);
                            }
                            else
                                triggeredExplosives.Add(bn.GetComponent<TimedExplosive>());
                        }

                        else
                            deployedExplosives.RemoveAt(i);
                    }
                }
                SaveDataToFile();
            }

            public void DeployExplosive(TimedExplosive te)
            {
                if (c4_mode == (ulong)C4_MODE.TIMED || (configuration.BLOCK_IN_EVENTS && Instance.IsPlayingEvent(player)))
                    return;

                te.SetFuse(float.MaxValue);
                triggeredExplosives.Add(te);

                saveData.deployedExplosives[player.userID].Add(te.net.ID);
                SaveDataToFile();

                if (configuration.C4_BEEP_DURATION == -1)
                    return;

                Instance.timer.Once(configuration.C4_BEEP_DURATION, () =>
                {
                    if (te != null)
                        RealC4_To_FakeC4(te);
                });
            }
            public void Explode(bool forceExplode = false)
            {
                if (!forceExplode && trigger == null)
                    return;

                for (int i=fakeExplosives.Count-1; i > -1; i--)
                    FakeC4_To_RealC4(fakeExplosives[i]);

                if (configuration.TRIGGER_ONE_TIME_USE && triggeredExplosives.Count > 0)
                        trigger.Remove();

                Instance.timer.Once(0.1f, () =>
                {
                    foreach (TimedExplosive te in triggeredExplosives)
                        te.Explode();

                    triggeredExplosives.Clear();
                    saveData.deployedExplosives[player.userID].Clear();
                    SaveDataToFile();
                });

            }

            private void RealC4_To_FakeC4(TimedExplosive realC4)
            {
                DroppedItem worldModel = ItemManager.CreateByItemID(498591726).Drop(realC4.transform.localPosition, Vector3.zero).GetComponent<DroppedItem>();

                if (realC4.GetParentEntity())
                {
                    worldModel.SetParent(realC4.GetParentEntity(), StringPool.closest);
                    worldModel.GetComponent<Rigidbody>().isKinematic = true;
                    worldModel.GetComponent<Rigidbody>().useGravity = false;
                }

                worldModel.transform.rotation = realC4.transform.localRotation * Quaternion.Euler(90, 0, 0);

                worldModel.allowPickup = configuration.C4_ALLOW_PICKUP;
                worldModel.CancelInvoke((Action)Delegate.CreateDelegate(typeof(Action), worldModel, "IdleDestroy"));
                worldModel.item.amount = worldModel.item.info.stackable;

                BaseEntity.saveList.Remove(worldModel);

                fakeExplosives.Add(worldModel);
                triggeredExplosives.Remove(realC4);
                fakeC4_To_PlayerID[worldModel.net.ID] = player.userID;

                saveData.deployedExplosives[player.userID].Remove(realC4.net.ID);
                saveData.deployedExplosives[player.userID].Add(worldModel.net.ID);
                SaveDataToFile();

                realC4.Kill();
            }
            private void FakeC4_To_RealC4(DroppedItem fakeC4)
            {
                TimedExplosive realC4 = GameManager.server.CreateEntity("assets/prefabs/tools/c4/explosive.timed.deployed.prefab",
                    fakeC4.transform.localPosition, fakeC4.transform.localRotation * Quaternion.Euler(90, 0, 0)).GetComponent<TimedExplosive>();

                if (fakeC4.GetParentEntity() != null)
                {
                    realC4.GetComponent<Rigidbody>().isKinematic = true;
                    realC4.GetComponent<Rigidbody>().useGravity = false;

                    realC4.SetParent(fakeC4.GetParentEntity(), StringPool.closest);
                }
                else
                {
                    if (realC4.transform.forward.y > 0)
                        realC4.transform.rotation *= Quaternion.Euler(180, 0, 0);
                }

                realC4.Spawn();

                realC4.SetFuse(float.MaxValue);

                triggeredExplosives.Add(realC4);
                fakeExplosives.Remove(fakeC4);
                fakeC4_To_PlayerID.Remove(fakeC4.net.ID);

                saveData.deployedExplosives[player.userID].Remove(fakeC4.net.ID);
                saveData.deployedExplosives[player.userID].Add(realC4.net.ID);
                SaveDataToFile();

                fakeC4.Kill();
            }

            public void Toggle_C4_Mode(bool forceToggle = false)
            {
                if (trigger == null && !forceToggle)
                    return;

                c4_mode = (c4_mode == (ulong)C4_MODE.TIMED ? (ulong)C4_MODE.TRIGGERED : (ulong)C4_MODE.TIMED);
                UpdateTriggerSkin();
            }

            public void Reset_C4_Mode()
            {
                if (trigger != null && trigger.skin != c4_mode)
                    return;

                c4_mode = (ulong)C4_MODE.TIMED;
            }

            private void UpdateTriggerSkin()
            {
                if (trigger == null || trigger.skin == c4_mode)
                    return;

                Item newItem = ItemManager.CreateByItemID(TRIGGER_ITEM_ID, 1, c4_mode);
                newItem.condition = trigger.condition;

                int position = trigger.position;

                trigger.RemoveFromContainer();
                trigger = newItem;
                newItem.MoveToContainer(player.inventory.containerBelt, position);
            }

            public void UpdateActiveItem(Item activeItem)
            {
                if (activeItem != null && (activeItem.skin == TRIGGER_SKIN_TIMED_MODE || activeItem.skin == TRIGGER_SKIN_TRIGGERD_MODE))
                {
                    trigger = activeItem;
                    UpdateTriggerSkin();
                }
                else
                    trigger = null;
            }

            public void CraftTrigger()
            {
                int item_1_amount = 0;
                int item_2_amount = 0;

                ItemContainer[] containers = new ItemContainer[] { player.inventory.containerMain, player.inventory.containerBelt };
                foreach (ItemContainer container in containers)
                {
                    item_1_amount += container.GetAmount(configuration.CRAFTING_ITEM_1_ID, true);
                    item_2_amount += container.GetAmount(configuration.CRAFTING_ITEM_2_ID, true);
                }

                if (item_1_amount >= configuration.CRAFTING_ITEM_1_NEEDED && item_2_amount >= configuration.CRAFTING_ITEM_2_NEEDED)
                {
                    item_1_amount = configuration.CRAFTING_ITEM_1_NEEDED;
                    item_2_amount = configuration.CRAFTING_ITEM_2_NEEDED;

                    foreach (ItemContainer container in containers)
                    {
                        if (item_1_amount > 0)
                            item_1_amount -= container.Take(null, configuration.CRAFTING_ITEM_1_ID, item_1_amount);

                        if (item_2_amount > 0)
                            item_2_amount -= container.Take(null, configuration.CRAFTING_ITEM_2_ID, item_2_amount);
                    }

                    if (GiveTrigger(1) != 1)
                    {
                        ChatMessage(player, L_CRAFTING_FAILED_SPACE, new object[] { Instance.lang.GetMessage(L_INVENTORY_FULL, Instance, player.UserIDString) });
                        player.inventory.GiveItem(ItemManager.Create(ItemManager.FindItemDefinition(configuration.CRAFTING_ITEM_1_ID), configuration.CRAFTING_ITEM_1_NEEDED));
                        player.inventory.GiveItem(ItemManager.Create(ItemManager.FindItemDefinition(configuration.CRAFTING_ITEM_2_ID), configuration.CRAFTING_ITEM_2_NEEDED));
                        return;
                    }

                    ChatMessage(player, L_CRAFTING_SUCCESS);
                }

                else
                    ChatMessage(player, L_CRAFTING_FAILED_RESOURCES, new object[] {
                        ItemManager.FindItemDefinition(configuration.CRAFTING_ITEM_1_ID).displayName.translated + " (" +
                        configuration.CRAFTING_ITEM_1_NEEDED + "), " + ItemManager.FindItemDefinition(configuration.CRAFTING_ITEM_2_ID).displayName.translated
                        + " (" + configuration.CRAFTING_ITEM_2_NEEDED + ")" });
            }

            public int GiveTrigger(int amount)
            {
                int given = 0;
                while (amount > 0)
                {
                    if (!player.inventory.GiveItem(ItemManager.CreateByItemID(TRIGGER_ITEM_ID, 1, c4_mode)))
                        break;
                    given++;
                    amount--;
                }

                return given;
            }

            public static void Pickup(Item item)
            {
                BaseEntity entity = item.GetWorldEntity();
                ulong playerID;

                if (fakeC4_To_PlayerID.TryGetValue(entity.net.ID, out playerID))
                {
                    allManagers[playerID].Pickup(entity.GetComponent<DroppedItem>());
                    item.amount = 1;
                }

            }

            private void Pickup(DroppedItem item)
            {
                fakeExplosives.Remove(item);
                saveData.deployedExplosives[player.userID].Remove(item.net.ID);
                SaveDataToFile();
            }
        }

        private static class TriggerShop
        {
            struct CreateInfo_BuildingBlock
            {
                public readonly Vector3 position, rotation;
                public readonly string prefabName;
                public readonly int grade;
                public CreateInfo_BuildingBlock(Vector3 position, Vector3 rotation, string prefabName)
                {
                    this.position = position;
                    this.rotation = rotation;
                    this.prefabName = prefabName;
                    this.grade = 4;
                }
            }
            struct CreateInfo_WoodenSign
            {
                public readonly Vector3 position, rotation;
                public readonly string prefabName, texture;
                public readonly bool locked;

                public CreateInfo_WoodenSign(Vector3 position, Vector3 rotation)
                {
                    this.position = position;
                    this.rotation = rotation;
                    this.prefabName = "assets/prefabs/deployable/signs/sign.medium.wood.prefab";
                    this.texture = "";
                    this.locked = true;
                }
            }
            struct CreatInfo_Item
            {
                public readonly Vector3 position, rotation;
                public readonly string prefabName;
                public readonly ulong skinId;
                public CreatInfo_Item(Vector3 position, Vector3 rotation, string prefabName)
                {
                    this.position = position;
                    this.rotation = rotation;
                    this.prefabName = prefabName;
                    this.skinId = 0;
                }
            }

            private static CreateInfo_BuildingBlock[] buildingBlockInfos = new CreateInfo_BuildingBlock[]
            {
                new CreateInfo_BuildingBlock(new Vector3(0f, 0f, 0f),
                                             new Vector3(0f, 0f, 0f),
                                             "assets/prefabs/building core/foundation.triangle/foundation.triangle.prefab"),
                new CreateInfo_BuildingBlock(new Vector3(-0.75f, 0f, 1.3f),
                                             new Vector3(0f, 210f, 0f),
                                             "assets/prefabs/building core/wall/wall.prefab"),
                new CreateInfo_BuildingBlock(new Vector3(0.75f, 0f, 1.3f),
                                             new Vector3(0f, -30f, 0f),
                                             "assets/prefabs/building core/wall/wall.prefab"),
                new CreateInfo_BuildingBlock(new Vector3(0f,  0f, 0f),
                                             new Vector3(0f, 90f, 0f),
                                             "assets/prefabs/building core/wall.doorway/wall.doorway.prefab"),
                new CreateInfo_BuildingBlock(new Vector3(0f, 3f, 0f),
                                             new Vector3(0f, 0f, 0f),
                                             "assets/prefabs/building core/floor.triangle/floor.triangle.prefab")
            };
            private static CreateInfo_WoodenSign signInfo = new CreateInfo_WoodenSign(new Vector3(0f, 1.9f, -0.15f),
                                                                                      new Vector3(0f, 180f, 0f));

            private static CreatInfo_Item toolCupboardInfo = new CreatInfo_Item(new Vector3(0f, 0f, 1.0f),
                                                                                new Vector3(0f, 0f, 0f),
                                                                                "assets/prefabs/deployable/tool cupboard/cupboard.tool.deployed.prefab");
            private static CreatInfo_Item vendingMachineInfo = new CreatInfo_Item(new Vector3(0f, 0f, 0.3f),
                                                                                  new Vector3(0f, 180f, 0f),
                                                                                  "assets/prefabs/deployable/vendingmachine/vendingmachine.deployed.prefab");

            public static VendingMachine Place(Vector3 position, float y_rotation, BasePlayer player)
            {
                BaseEntity entity;
                BaseCombatEntity basecombat;
                uint? buidlingID = null;

                // BuildingBlocks
                foreach (CreateInfo_BuildingBlock ci_BB in buildingBlockInfos)
                {
                    entity = basecombat = null;
                    entity = CreateEntity(position, y_rotation, ci_BB.position, ci_BB.rotation, ci_BB.prefabName, player);

                    BuildingBlock buildingBlock = entity.GetComponentInParent<BuildingBlock>();
                    buildingBlock.blockDefinition = PrefabAttribute.server.Find<Construction>(buildingBlock.prefabID);
                    buildingBlock.SetGrade((BuildingGrade.Enum)ci_BB.grade);
                    if (buidlingID == null)
                        buidlingID = BuildingManager.server.NewBuildingID();
                    buildingBlock.buildingID = (uint)buidlingID;

                    entity.Spawn();
                    saveData.shopEntities.Add(entity.net.ID);
                    basecombat = entity.GetComponentInParent<BaseCombatEntity>();
                    basecombat.ChangeHealth(basecombat.MaxHealth());
                }

                // ToolCupboard
                entity = basecombat = null;
                entity = CreateEntity(position, y_rotation, toolCupboardInfo.position, toolCupboardInfo.rotation, toolCupboardInfo.prefabName, player);
                ((DecayEntity)entity).buildingID = (uint)buidlingID;
                entity.Spawn();
                saveData.shopEntities.Add(entity.net.ID);
                basecombat = entity.GetComponentInParent<BaseCombatEntity>();
                basecombat.ChangeHealth(basecombat.MaxHealth());

                //Vending Machine
                entity = basecombat = null;
                entity = CreateEntity(position, y_rotation, vendingMachineInfo.position, vendingMachineInfo.rotation, vendingMachineInfo.prefabName, player);
                entity.Spawn();
                saveData.shopEntities.Add(entity.net.ID);
                basecombat = entity.GetComponentInParent<BaseCombatEntity>();
                basecombat.ChangeHealth(basecombat.MaxHealth());

                VendingMachine vendingMachine = entity.GetComponentInParent<VendingMachine>();
                Refill(vendingMachine);
                SetupSellOrder(vendingMachine);

                // Sign
                entity = basecombat = null;
                entity = CreateEntity(position, y_rotation, signInfo.position, signInfo.rotation, signInfo.prefabName, player);
                entity.Spawn();
                saveData.shopEntities.Add(entity.net.ID);
                basecombat = entity.GetComponentInParent<BaseCombatEntity>();
                basecombat.ChangeHealth(basecombat.MaxHealth());

                ApplySignTexture(entity.GetComponentInParent<Signage>());

                SaveDataToFile();

                return vendingMachine;
            }

            public static void ApplySignTexture (Signage sign)
            {
                byte[] texture = Convert.FromBase64String(signInfo.texture);
                sign.textureID = FileStorage.server.Store(texture, FileStorage.Type.png, sign.net.ID);

                sign.SetFlag(BaseEntity.Flags.Locked, signInfo.locked);
                sign.SendNetworkUpdate();
            }

            private static BaseEntity CreateEntity(Vector3 placementPos, float placementRotY, Vector3 pos, Vector3 rot, string prefabName, BasePlayer player)
            {
                Vector3 placementRot = new Vector3(0f, placementRotY, 0f);

                Quaternion newRot = Quaternion.Euler(placementRot + rot);
                Vector3 newPos = Quaternion.Euler(placementRot) * pos + placementPos;

                BaseEntity entity = GameManager.server.CreateEntity(prefabName, newPos, newRot);

                entity.transform.position = newPos;
                entity.transform.rotation = newRot;
                entity.SendMessage("SetDeployedBy", player, SendMessageOptions.DontRequireReceiver);

                return entity;
            }

            public static void Refill(VendingMachine vendingMachine)
            {
                ItemManager.CreateByItemID(TRIGGER_ITEM_ID, 1, TRIGGER_SKIN_TIMED_MODE).MoveToContainer(vendingMachine.inventory);
            }

            public static void RemoveCurrency(VendingMachine vendingMachine)
            {
                foreach (Item i in vendingMachine.inventory.FindItemsByItemID(configuration.CURRENCY_ID))
                    i.RemoveFromContainer();
            }

            public static void SetupSellOrder (VendingMachine vendingMachine)
            {
                vendingMachine.sellOrders.sellOrders.RemoveAll(v => v.itemToSellID == TRIGGER_ITEM_ID);
                vendingMachine.RefreshSellOrderStockLevel();

                ProtoBuf.VendingMachine.SellOrder order = new ProtoBuf.VendingMachine.SellOrder();
                order.itemToSellID = TRIGGER_ITEM_ID;
                order.itemToSellAmount = 1;
                order.currencyID = configuration.CURRENCY_ID;
                order.currencyAmountPerItem = configuration.CURRENCY_NEEDED;
                vendingMachine.sellOrders.sellOrders.Add(order);
                vendingMachine.RefreshSellOrderStockLevel();
            }
        }

        public class SaveData
        {
            public Dictionary<ulong, List<uint>> deployedExplosives = new Dictionary<ulong, List<uint>>();  // stores all deployed explosives per player (real & fake)

            public HashSet<uint> vendingMachines = new HashSet<uint>();
            public HashSet<uint> shopEntities = new HashSet<uint>();
        }
        #endregion

        private static TriggeredExplosiveCharges Instance;
        private static Configuration configuration;
        private static SaveData saveData;

        #region Commands
        bool PermissionGranted(BasePlayer player, string permissionName) { return (player.net.connection.authLevel > 1) || permission.UserHasPermission(player.UserIDString, permissionName); }

        [ChatCommand("tec.shop")]
        private void PlaceShop(BasePlayer player, string command, string[] args)
        {
            if (!PermissionGranted(player, PERMISSION_PLACE))
            {
                ChatMessage(player, L_PERMISSION_FAILED);
                return;
            }

            RaycastHit hitinfo;
            if (Physics.Raycast(player.eyes.position, Quaternion.Euler(player.GetNetworkRotation()) * Vector3.forward, out hitinfo, 30f,
                LayerMask.GetMask(new string[] { "Construction", "Deployed", "Terrain", "World", "Water", "Default"})))
            {
                VendingMachine vendingMachine = hitinfo.transform.GetComponent<VendingMachine>();
                Signage sign = hitinfo.transform.GetComponent<Signage>();
                if (vendingMachine)
                {
                    TriggerShop.Refill(vendingMachine);
                    TriggerShop.SetupSellOrder(vendingMachine);
                }
                else if (sign)
                {
                    TriggerShop.ApplySignTexture(sign);
                    return;
                }
                else
                    vendingMachine = TriggerShop.Place(hitinfo.point, player.GetNetworkRotation().y, player);

                saveData.vendingMachines.Add(vendingMachine.net.ID);
                SaveDataToFile();
            }
            else
                ChatMessage(player, L_SHOP_FAILED);
        }

        [ChatCommand("tec.givetrigger")]
        private void GiveTrigger_Chat(BasePlayer player, string command, string[] args)
        {
            GiveTrigger(player, args);
        }

        [ConsoleCommand("tec.givetrigger")]
        private void GiveTrigger_Console(ConsoleSystem.Arg arg)
        {
            if (arg.Player() != null)
                GiveTrigger(arg.Player(), arg.Args);
            else if (arg.IsRcon && arg.IsAdmin)
                GiveTrigger(null, arg.Args);
        }

        private void GiveTrigger(BasePlayer player, string[] args)
        {
            int amount = 1;
            bool playerNotNull = (player != null);

            if (playerNotNull && player.net.connection.authLevel < 2)
            {
                ChatMessage(player, L_PERMISSION_FAILED);
                return;
            }
            if (args == null || args.Length == 0)
            {
                if (playerNotNull)
                    ChatMessage(player, L_GIVE_MISSING_ARGUMENT, new object[] { "/givetrigger " + lang.GetMessage(L_GIVE_SYNTAX, this, player.UserIDString) });
                else
                    ServerMessage(L_GIVE_MISSING_ARGUMENT, new object[] { "givetrigger " + lang.GetMessage(L_GIVE_SYNTAX, this) });

                return;
            }
            if (args.Length > 1)
            {
                if (!Int32.TryParse(args[1], out amount))
                {
                    if (playerNotNull)
                        ChatMessage(player, L_GIVE_WRONG_FORMAT, new object[] { "/givetrigger " + lang.GetMessage(L_GIVE_SYNTAX, this, player.UserIDString) });
                    else
                        ServerMessage(L_GIVE_WRONG_FORMAT, new object[] { "givetrigger " + lang.GetMessage(L_GIVE_SYNTAX, this) });

                    return;
                }
            }

            BasePlayer givePlayer = BasePlayer.Find(args[0]);

            if (givePlayer == null)
            {
                if (playerNotNull)
                    ChatMessage(player, L_GIVE_NOT_FOUND);
                else
                    ServerMessage(L_GIVE_NOT_FOUND);
                return;
            }

            int given = TriggeredExplosivesManager.allManagers[givePlayer.userID].GiveTrigger(amount);

            if (playerNotNull)
                ChatMessage(player, L_GIVE_SUCCESS, new object[] { givePlayer.displayName, given + "/" + amount, (given != amount ? "(" + lang.GetMessage(L_INVENTORY_FULL, this, player.UserIDString) + ")" : "") });
            else
                ServerMessage(L_GIVE_SUCCESS, new object[] { givePlayer.displayName, given + "/" + amount, (given != amount ? "(" + lang.GetMessage(L_INVENTORY_FULL, this) + ")": "") });
        }

        [ChatCommand("tec.craft")]
        private void CraftTrigger(BasePlayer player, string command, string[] args)
        {
            if (!configuration.CRAFTING_ENABLED && (player.net.connection.authLevel < 2) && !PermissionGranted(player, PERMISSION_CRAFTING))
            {
                ChatMessage(player, L_PERMISSION_FAILED);
                return;
            }

            TriggeredExplosivesManager.allManagers[player.userID].CraftTrigger();
        }

        [ChatCommand("tec.mode")]
        private void Console_Toggle_C4_Mode(BasePlayer player, string command, string[] args)
        {
            if (!PermissionGranted(player, PERMISSION_NOTRIGGER))
            {
                ChatMessage(player, L_PERMISSION_FAILED);
                return;
            }

            TriggeredExplosivesManager.allManagers[player.userID].Toggle_C4_Mode(true);
        }

        [ChatCommand("tec.explode")]
        private void Console_Explode(BasePlayer player, string command, string[] args)
        {
            if (!PermissionGranted(player, PERMISSION_NOTRIGGER))
            {
                ChatMessage(player, L_PERMISSION_FAILED);
                return;
            }
            TriggeredExplosivesManager.allManagers[player.userID].Explode(true);
        }
        #endregion

        #region Initialization & Termination

        private void OnServerInitialized()
        {
            LoadDataFromFile();
        }

        private void Init()
        {
            permission.RegisterPermission(PERMISSION_PLACE, this);
            permission.RegisterPermission(PERMISSION_CRAFTING, this);
            permission.RegisterPermission(PERMISSION_NOTRIGGER, this);

            Instance = this;

            LoadDefaultConfig();
        }

        private void Unload()
        {
            foreach (BasePlayer player in BasePlayer.activePlayerList)
                OnPlayerDisconnected(player, "");
            foreach (TriggeredExplosivesManager tem in TriggeredExplosivesManager.allManagers.Values)
                tem.Explode(true);

            TriggeredExplosivesManager.allManagers.Clear();

            SaveDataToFile();
        }

        private void OnPlayerInit(BasePlayer player)
        {
            if (!TriggeredExplosivesManager.allManagers.ContainsKey(player.userID))
                TriggeredExplosivesManager.allManagers.Add(player.userID, new TriggeredExplosivesManager(player));
        }

        private void OnPlayerDisconnected(BasePlayer player, string reason) { TriggeredExplosivesManager.allManagers.Remove(player.userID); }

        #endregion

        #region Hooks

        private void OnExplosiveThrown(BasePlayer player, BaseEntity entity)
        {
            TimedExplosive te = entity as TimedExplosive;
            if (entity.name.Equals("assets/prefabs/tools/c4/explosive.timed.deployed.prefab"))
                TriggeredExplosivesManager.allManagers[player.userID].DeployExplosive(te);
        }

        private void OnPlayerActiveItemChanged(BasePlayer player, Item oldItem, Item newItem)
        {
            OnPlayerInit(player);
            TriggeredExplosivesManager.allManagers[player.userID].UpdateActiveItem(newItem);
        }

        private void OnPlayerInput(BasePlayer player, InputState input)
        {
            if (input.WasJustPressed(BUTTON.FIRE_PRIMARY))
                TriggeredExplosivesManager.allManagers[player.userID].Explode();
            else if (input.WasJustPressed(BUTTON.FIRE_SECONDARY))
                TriggeredExplosivesManager.allManagers[player.userID].Toggle_C4_Mode();
        }

        private void OnVendingTransaction(VendingMachine vendingMachine, BasePlayer player)
        {
            if (saveData.vendingMachines.Contains(vendingMachine.net.ID))
            {
                TriggerShop.Refill(vendingMachine);
                TriggerShop.RemoveCurrency(vendingMachine);
            }
        }

        private void OnEntityTakeDamage(BaseCombatEntity entity, HitInfo info)
        {
            if (entity == null || info == null || entity.net == null)
                return;

            if (saveData.vendingMachines.Contains(entity.net.ID) || saveData.shopEntities.Contains(entity.net.ID))
                info.damageTypes = new Rust.DamageTypeList();
        }

        private void OnItemPickup(Item item, BasePlayer player)
        {
            if (configuration.C4_ALLOW_PICKUP && item.info.itemid == 498591726)
                TriggeredExplosivesManager.Pickup(item);
        }

        void OnItemRemovedFromContainer(ItemContainer container, Item item)
        {
            BasePlayer player = container.GetOwnerPlayer();

            if (player != null && (item.skin == TRIGGER_SKIN_TIMED_MODE || item.skin == TRIGGER_SKIN_TRIGGERD_MODE))
            {
                foreach (Item i in player.inventory.FindItemIDs(item.info.itemid))
                {
                    if(item.skin == TRIGGER_SKIN_TIMED_MODE || item.skin == TRIGGER_SKIN_TRIGGERD_MODE)
                        return;
                }
                TriggeredExplosivesManager.allManagers[player.userID].Reset_C4_Mode();
            }
        }
        #endregion

        #region Configuration & Data

        private struct Configuration
        {
            public const string S_CURRENCY_ID =     "SHOP | Currency item for buying a trigger [item shortname]";
            public const string S_CURRENCY_NEEDED = "SHOP | Needed amount of currency item [number]";

            public const string S_CRAFTING_ENABLED =        "CRAFTING | Allow all players to craft triggers [true,false]";
            public const string S_CRAFTING_ITEM_1_ID =      "CRAFTING | Ingredient 1 for crafting [item shortname]";
            public const string S_CRAFTING_ITEM_1_NEEDED =  "CRAFTING | Needed amount of ingredient 1 [number]";
            public const string S_CRAFTING_ITEM_2_ID =      "CRAFTING | Ingredient 2 for crafting [item shortname]";
            public const string S_CRAFTING_ITEM_2_NEEDED =  "CRAFTING | Needed amount of ingredient 2 [number]";

            public const string S_C4_BEEP_DURATION = "TRIGGERED C4 | Disable beeping sound after duration (minimum: 5; infinite: -1) [seconds]";
            public const string S_C4_ALLOW_PICKUP = "TRIGGERED C4 | Allow C4 pickup (only after beeping got disabled) [true, false]";

            public const string S_TRIGGER_ONE_TIME_USE = "TRIGGER | Trigger destroys itself after using it once [true, false]";

            public const string S_BLOCK_IN_EVENTS = "Event Manager | Block trigger usage during events [true, false]";

            public readonly int CURRENCY_ID;
            public readonly int CURRENCY_NEEDED;

            public readonly bool CRAFTING_ENABLED;

            public readonly int CRAFTING_ITEM_1_ID;
            public readonly int CRAFTING_ITEM_1_NEEDED;
            public readonly int CRAFTING_ITEM_2_ID;
            public readonly int CRAFTING_ITEM_2_NEEDED;

            public readonly int C4_BEEP_DURATION;
            public readonly bool C4_ALLOW_PICKUP;

            public readonly bool TRIGGER_ONE_TIME_USE;

            public readonly bool BLOCK_IN_EVENTS;

            public Configuration(int currency_id, int currency_needed, bool crafting_enabled,
                                 int item_1_id, int item_1_needed, int item_2_id, int item_2_needed,
                                 int beepDuration, bool allowPickup, bool oneTimeUse, bool blockInEvents)
            {
                CURRENCY_ID = currency_id;
                CURRENCY_NEEDED = currency_needed;

                CRAFTING_ENABLED = crafting_enabled;
                CRAFTING_ITEM_1_ID = item_1_id;
                CRAFTING_ITEM_1_NEEDED = item_1_needed;
                CRAFTING_ITEM_2_ID = item_2_id;
                CRAFTING_ITEM_2_NEEDED = item_2_needed;

                C4_BEEP_DURATION = beepDuration;
                C4_ALLOW_PICKUP = allowPickup;

                TRIGGER_ONE_TIME_USE = oneTimeUse;

                BLOCK_IN_EVENTS = blockInEvents;
            }
        }

        T GetConfig<T>(string name, T value) => Config[name] == null ? value : (T)Convert.ChangeType(Config[name], typeof(T));

        protected override void LoadDefaultConfig()
        {
            string currency_shortname;
            int currency_needed;

            bool craft;
            string item_1_shortname, item_2_shortname;
            int item_1_needed, item_2_needed;

            int beepDuration;
            bool allowPickup;

            bool oneTimeUse;

            bool blockInEvents;

            Config[Configuration.S_CURRENCY_ID] = currency_shortname = GetConfig(Configuration.S_CURRENCY_ID, "techparts");
            Config[Configuration.S_CURRENCY_NEEDED] = currency_needed = GetConfig(Configuration.S_CURRENCY_NEEDED, 5);

            Config[Configuration.S_CRAFTING_ENABLED] = craft = GetConfig(Configuration.S_CRAFTING_ENABLED, false);
            Config[Configuration.S_CRAFTING_ITEM_1_ID] = item_1_shortname = GetConfig(Configuration.S_CRAFTING_ITEM_1_ID, "metal.refined");
            Config[Configuration.S_CRAFTING_ITEM_1_NEEDED] = item_1_needed = GetConfig(Configuration.S_CRAFTING_ITEM_1_NEEDED, 50);
            Config[Configuration.S_CRAFTING_ITEM_2_ID] = item_2_shortname = GetConfig(Configuration.S_CRAFTING_ITEM_2_ID, "techparts");
            Config[Configuration.S_CRAFTING_ITEM_2_NEEDED] = item_2_needed = GetConfig(Configuration.S_CRAFTING_ITEM_2_NEEDED, 2);

            Config[Configuration.S_C4_BEEP_DURATION] = beepDuration = GetConfig(Configuration.S_C4_BEEP_DURATION, 10);
            Config[Configuration.S_C4_ALLOW_PICKUP] = allowPickup = GetConfig(Configuration.S_C4_ALLOW_PICKUP, false);

            Config[Configuration.S_TRIGGER_ONE_TIME_USE] = oneTimeUse = GetConfig(Configuration.S_TRIGGER_ONE_TIME_USE, false);

            Config[Configuration.S_BLOCK_IN_EVENTS] = blockInEvents = GetConfig(Configuration.S_BLOCK_IN_EVENTS, false);

            ItemDefinition item_1_definition = ItemManager.FindItemDefinition(item_1_shortname);
            ItemDefinition item_2_definition = ItemManager.FindItemDefinition(item_2_shortname);
            ItemDefinition currency_definition = ItemManager.FindItemDefinition(currency_shortname);

            int item_1_id = 374890416, item_2_id = 1471284746, currency_id = 1471284746;

            if (item_1_definition != null) item_1_id = item_1_definition.itemid;
            else ServerMessage(L_CONFIG_ERROR, new object[] { "Ingredient 1 for crafting",  "\"metal.refined\""});

            if (item_2_definition != null) item_2_id = item_2_definition.itemid;
            else ServerMessage(L_CONFIG_ERROR, new object[] { "Ingredient 2 for crafting", "\"techparts\"" });

            if (currency_definition != null) currency_id = currency_definition.itemid;
            else ServerMessage(L_CONFIG_ERROR, new object[] { "Currency item for buying a trigger", "\"techparts\"" });

            if (beepDuration!=-1 && beepDuration < 5.0f) beepDuration = 5;

            configuration = new Configuration(currency_id, currency_needed,
                craft, item_1_id, item_1_needed, item_2_id, item_2_needed,
                beepDuration, allowPickup, oneTimeUse, blockInEvents);

            SaveConfig();
        }

        private static void SaveDataToFile() { Core.Interface.Oxide.DataFileSystem.WriteObject(Instance.Name, saveData); }

        private static void LoadDataFromFile()
        {
            saveData = Core.Interface.Oxide.DataFileSystem.ReadObject<SaveData>(Instance.Name);
            if (saveData == null)
                saveData = new SaveData();

            saveData.vendingMachines.RemoveWhere(s => BaseNetworkable.serverEntities.Find(s) == null);
            saveData.shopEntities.RemoveWhere(s => BaseNetworkable.serverEntities.Find(s) == null);

            foreach (uint vmID in saveData.vendingMachines)
                TriggerShop.SetupSellOrder(BaseNetworkable.serverEntities.Find(vmID).GetComponent<VendingMachine>());

            foreach (BasePlayer player in BasePlayer.activePlayerList)
                Instance.OnPlayerInit(player);

            SaveDataToFile();
        }

        #endregion

        #region Localization

        private const string L_CRAFTING_SUCCESS = "Crafting | Success";
        private const string L_CRAFTING_FAILED_SPACE = "Crafting | NotEnoughSpace";
        private const string L_CRAFTING_FAILED_RESOURCES = "Crafting | NotEnoughResources";
        private const string L_PERMISSION_FAILED = "Permission | NotGranted";
        private const string L_SHOP_FAILED = "Shop | NoValidTarget";
        private const string L_GIVE_MISSING_ARGUMENT = "Give | MissingArgument";
        private const string L_GIVE_WRONG_FORMAT = "Give | WrongFormat";
        private const string L_GIVE_NOT_FOUND = "Give | PlayerNotFound";
        private const string L_GIVE_SYNTAX = "Give | Syntax";
        private const string L_GIVE_SUCCESS = "Give | Success";
        private const string L_CONFIG_ERROR = "Config | Error";
        private const string L_INVENTORY_FULL = "Inventory | NotEnoughSpace";

        private static void ChatMessage(BasePlayer player, string key) { player.ChatMessage(Instance.lang.GetMessage(key, Instance, player.UserIDString)); }
        private static void ChatMessage(BasePlayer player, string key, object[] args) { player.ChatMessage(String.Format(Instance.lang.GetMessage(key, Instance, player.UserIDString), args)); }
        private static void ServerMessage(string key) { Instance.Puts(Instance.lang.GetMessage(key, Instance)); }
        private static void ServerMessage(string key, object[] args) { Instance.Puts(String.Format(Instance.lang.GetMessage(key, Instance), args)); }

        private new void LoadDefaultMessages()
        {
            // English
            lang.RegisterMessages(new Dictionary<string, string>
            {
                [L_CRAFTING_SUCCESS] = "Trigger crafted!",
                [L_CRAFTING_FAILED_SPACE] = "Crafting Failed: {0}",
                [L_CRAFTING_FAILED_RESOURCES] = "Not enough resources. Needed: {0}",
                [L_PERMISSION_FAILED] = "You don't have permission to use this command",
                [L_SHOP_FAILED] = "Not a valid target for shop placement",
                [L_GIVE_MISSING_ARGUMENT] = "Missing Argument\n(Syntax: {0})",
                [L_GIVE_WRONG_FORMAT] = "Argument amount must be a number\n(Syntax: {0})",
                [L_GIVE_SYNTAX] = "\"PLAYERNAME or STEAMID\" \"optional:AMOUNT\"",
                [L_GIVE_NOT_FOUND] = "Player not found",
                [L_GIVE_SUCCESS] = "Gave \"{0}\" {1} triggers {2}",
                [L_CONFIG_ERROR] = "Configuration Error: Invalid Value for \"{0}\" (loading default value: {1})",
                [L_INVENTORY_FULL] = "Not enough inventory space"
            }, this);

            // German
            lang.RegisterMessages(new Dictionary<string, string>
            {
                [L_CRAFTING_SUCCESS] = "Trigger gecrafted!",
                [L_CRAFTING_FAILED_SPACE] = "Craften fehlgeschlagen: {0}",
                [L_CRAFTING_FAILED_RESOURCES] = "Zu wenig Ressourcen. Benötigt: {0}",
                [L_PERMISSION_FAILED] = "Du bist nicht berechtigt diesen Befehl zu benutzen",
                [L_SHOP_FAILED] = "Du kannst hier keinen Shop platzieren",
                [L_GIVE_MISSING_ARGUMENT] = "Fehlende Parameter\n(Syntax: {0})",
                [L_GIVE_WRONG_FORMAT] = "Anzahl muss eine Zahl sein\n(Syntax: {0})",
                [L_GIVE_SYNTAX] = "\"SPIELERNAME oder STEAMID\" \"optional:ANZAHL\"",
                [L_GIVE_NOT_FOUND] = "Spieler nicht gefunden",
                [L_GIVE_SUCCESS] = "\"{0}\" {1} Trigger gegeben {2}",
                [L_CONFIG_ERROR] = "Configuration Fehler: Ungültiger Wert für \"{0}\" (lade Standardwert: {1})",
                [L_INVENTORY_FULL] = "Nicht genug Platz im Inventar"
            }, this, "de");
        }

        #endregion

        #region External Plugins
        [PluginReference]
        Core.Plugins.Plugin EventManager;
        bool IsPlayingEvent(BasePlayer player) => (bool?)EventManager?.Call("isPlaying", player) ?? false;
        #endregion
    }
}
